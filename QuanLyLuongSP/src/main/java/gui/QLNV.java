/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Font;

import javax.swing.ButtonGroup;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

import dao.NhanVien_DAO;
import dao.PhongBan_DAO;
import dao.TaiKhoan_Dao;
import entity.NhanVien;
import entity.PhongBan;
import entity.TaiKhoan;

/**
 *
 * @author tcao2
 */
public class QLNV extends javax.swing.JPanel implements ActionListener, MouseListener{
	private DefaultTableModel modelNV;
    /**
     * Creates new form QLNV
     */
    public QLNV() {
        initComponents();
        txtMa.setEnabled(false);
        btnThem.setFocusPainted(false);
        btnNghiviec.setFocusPainted(false);
        btnCapnhat.setFocusPainted(false);
        btnXoaRong.setFocusPainted(false);
        btnTK.setFocusPainted(false);
        cbPb.setBackground(Color.white);
        cbGioitinh.setBackground(Color.white);
        cbTKPb.setBackground(Color.white);
        ButtonGroup group = new ButtonGroup();
        group.add(rTatca);
        group.add(rDanglam);
        group.add(rNghiviec);
        rDanglam.setSelected(true);
        modelNV = new DefaultTableModel(new String[] {"Mã nhân viên", "Tên nhân viên","Ngày sinh",
				"Ngày vào làm", "CMND", "SDT","Giới tính","Phòng ban"}, 0);
        jTable1.setModel(modelNV);
        NhanVien_DAO nvdao = new NhanVien_DAO();
        ArrayList<NhanVien> ds = (ArrayList<NhanVien>) nvdao.getNVDangLam();
//		DateFormat date = new SimpleDateFormat("yyyy-MM-dd");
		dateNS.setDateFormatString("dd-MM-yyyy");
		dateNVL.setDateFormatString("dd-MM-yyyy");
        for(int i=0;i<ds.size();i++)
        {
        	modelNV.addRow(new Object[] {ds.get(i).getMaNV(),ds.get(i).getTenNV(),ds.get(i).getNgaySinh(),ds.get(i).getNgayVaolam(),ds.get(i).getCMND(),ds.get(i).getSDT(),ds.get(i).isGioiTinh()? "Nam" : "Nữ",ds.get(i).getPhongban().getTenPB()});
        }
        
       
       btnThem.addActionListener(this);
       btnNghiviec.addActionListener(this);
       btnCapnhat.addActionListener(this);
       jTable1.addMouseListener(this);
       cbTKPb.addActionListener(this);
       btnTK.addActionListener(this);
       rTatca.addActionListener(this);
       rDanglam.addActionListener(this);
       rNghiviec.addActionListener(this);
       btnXoaRong.addActionListener(this);
       
       	jTable1.setRowHeight(jTable1.getRowHeight()+20);
       	JTableHeader h = jTable1.getTableHeader();
		h.setFont(new Font("Arial", Font.BOLD, 13));
		h.setForeground(new Color(255, 255, 255));
		h.setBackground(new Color(146, 200, 240));
		
		
		
		
    }
    NhanVien_DAO nv_dao = new NhanVien_DAO();
    PhongBan_DAO pb_dao = new PhongBan_DAO();
    ArrayList<NhanVien> dsnv = (ArrayList<NhanVien>) nv_dao.getNVall();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        lblTen = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        lblPb = new javax.swing.JLabel();
        cbPb = new javax.swing.JComboBox<>();
        lblGioitinh = new javax.swing.JLabel();
        cbGioitinh = new javax.swing.JComboBox<>();
        lblNgaysinh = new javax.swing.JLabel();
        lblNgayvaolam = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        lblCMND = new javax.swing.JLabel();
        txtCMND = new javax.swing.JTextField();
        dateNVL = new com.toedter.calendar.JDateChooser();
        dateNS = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblTKPB = new javax.swing.JLabel();
        cbTKPb = new javax.swing.JComboBox<>();
        lblTK = new javax.swing.JLabel();
        txtTK = new javax.swing.JTextField();
        btnTK = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnNghiviec = new javax.swing.JButton();
        btnCapnhat = new javax.swing.JButton();
        rTatca = new javax.swing.JRadioButton();
        rDanglam = new javax.swing.JRadioButton();
        rNghiviec = new javax.swing.JRadioButton();
        btnXoaRong = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 5));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin nhân viên"));

        jLabel1.setText("Mã nhân viên");

        lblTen.setText("Tên nhân viên");

        lblPb.setText("Phòng ban");

        cbPb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phòng hành chính", "Phòng lao động" }));

        lblGioitinh.setText("Giới tính");

        cbGioitinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        lblNgaysinh.setText("Ngày sinh");

        lblNgayvaolam.setText("Ngày vào làm");

        lblSDT.setText("Số điên thoại");

        lblCMND.setText("CMND");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblNgayvaolam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNgaysinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPb, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(lblGioitinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCMND, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(dateNVL, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(dateNS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbGioitinh, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbPb, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTen, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMa, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCMND, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSDT))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGioitinh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbGioitinh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateNS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNgayvaolam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateNVL, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách nhân viên"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lblTKPB.setText("Phòng ban");

        cbTKPb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Công nhân", "Nhân viên" }));

        lblTK.setText("Tìm kiếm");

        btnTK.setBackground(new Color(228, 237, 225));
        btnTK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo for Design Form/Find.png"))); // NOI18N
        btnTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKActionPerformed(evt);
            }
        });

        btnThem.setBackground(new Color(228, 237, 225));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo for Design Form/Create.png"))); // NOI18N
        btnThem.setText("Thêm ");

        btnNghiviec.setBackground(new Color(228, 237, 225));
        btnNghiviec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo for Design Form/Stop sign.png"))); // NOI18N
        btnNghiviec.setText("Nghỉ việc");

        btnCapnhat.setBackground(new Color(228, 237, 225));
        btnCapnhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo for Design Form/Refresh.png"))); // NOI18N
        btnCapnhat.setText("Cập nhật");

        rTatca.setBackground(new java.awt.Color(255, 255, 255));
        rTatca.setSelected(true);
        rTatca.setText("Tất cả");
        rTatca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rTatcaActionPerformed(evt);
            }
        });

        rDanglam.setBackground(new java.awt.Color(255, 255, 255));
        rDanglam.setText("Đang làm");
        rDanglam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rDanglamActionPerformed(evt);
            }
        });

        rNghiviec.setBackground(new java.awt.Color(255, 255, 255));
        rNghiviec.setText("Nghỉ việc");
        rNghiviec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rNghiviecActionPerformed(evt);
            }
        });

        btnXoaRong.setBackground(new Color(228, 237, 225));
        btnXoaRong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Photo for Design Form/No.png"))); // NOI18N
        btnXoaRong.setText("Xóa rỗng");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblTK, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(lblTKPB, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTKPb, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rTatca, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(rDanglam, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rNghiviec, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnXoaRong, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnNghiviec, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btnCapnhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rNghiviec, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(rDanglam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rTatca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTKPB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTKPb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNghiviec, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapnhat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnXoaRong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rTatcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rTatcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rTatcaActionPerformed

    private void rDanglamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rDanglamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rDanglamActionPerformed

    private void rNghiviecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rNghiviecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rNghiviecActionPerformed

    private void btnTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapnhat;
    private javax.swing.JButton btnNghiviec;
    private javax.swing.JButton btnTK;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoaRong;
    private javax.swing.JComboBox<String> cbPb;
    private javax.swing.JComboBox<String> cbGioitinh;
    private javax.swing.JComboBox<String> cbTKPb;
    private com.toedter.calendar.JDateChooser dateNS;
    private com.toedter.calendar.JDateChooser dateNVL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCMND;
    private javax.swing.JLabel lblGioitinh;
    private javax.swing.JLabel lblNgaysinh;
    private javax.swing.JLabel lblNgayvaolam;
    private javax.swing.JLabel lblPb;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTK;
    private javax.swing.JLabel lblTKPB;
    private javax.swing.JLabel lblTen;
    private javax.swing.JRadioButton rDanglam;
    private javax.swing.JRadioButton rNghiviec;
    private javax.swing.JRadioButton rTatca;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTK;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
	@Override
	public void actionPerformed(ActionEvent e) {
		Object obj = e.getSource();
		if(obj.equals(btnThem)) {
			String tenNV,phBan;
		
			String maNhanVien = taoMaNhanVien();
			tenNV = txtTen.getText();
			java.sql.Date ns=null;
			java.sql.Date nvl=null;
			String SDT = null;
			String CMND = null;
			if(dateNS.getDate()!=null &&dateNVL.getDate()!=null)
			{
				 ns = new java.sql.Date(dateNS.getDate().getTime());
				 nvl = new java.sql.Date(dateNVL.getDate().getTime());
			}
			
			
			
				CMND = txtCMND.getText();
				
				
				SDT = txtSDT.getText();
				
					
			
			
//			
			boolean gt = cbGioitinh.getSelectedIndex() == 0;
			phBan = cbPb.getSelectedItem().toString();
			PhongBan pb;
			PhongBan_DAO pbdao = new PhongBan_DAO();
			pb = pbdao.getPBten(phBan);
//			JOptionPane.showMessageDialog(null, pbdao.getPBten(phBan));
			
			if(txtTen.getText().equals("") | txtSDT.getText().equals("") |  txtCMND.getText().equals("") )
				 JOptionPane.showMessageDialog(this, "Vui lòng nhập dữ liệu");
//			
			else if(ktraten()&&ktrans()&&ktranvl()&&ktrasdt(txtSDT.getText())&&ktracmnd(txtCMND.getText()))
			{
				NhanVien_DAO nv_dao = new NhanVien_DAO();		
				NhanVien nv = new NhanVien(maNhanVien, tenNV, ns, nvl,CMND,SDT, gt);
				TaiKhoan_Dao tk_dao = new TaiKhoan_Dao();
				tk_dao.themTK(new TaiKhoan(maNhanVien,"1"));
				nv.setPhongban(pb);
				nv.setTaikhoan(new TaiKhoan(maNhanVien,"1"));
				
				nv_dao.themNV(nv);
			dsnv.add(nv);
			modelNV.addRow(new Object [] {nv.getMaNV(),nv.getTenNV(),nv.getNgaySinh(),nv.getNgayVaolam(),nv.getCMND(),nv.getSDT(),nv.isGioiTinh()? "Nam" : "Nữ",pb.getTenPB()});
			JOptionPane.showMessageDialog(null,"Thêm nhân viên thành công");
			}
//			else {			
//				NhanVien_DAO nv_dao = new NhanVien_DAO();		
//				NhanVien nv = new NhanVien(maNhanVien, tenNV, ns, nvl,CMND,SDT , gt);
//				TaiKhoan_Dao tk_dao = new TaiKhoan_Dao();
//				tk_dao.themTK(new TaiKhoan(maNhanVien,"1"));
//				nv.setPhongban(pb);
//				nv.setTaikhoan(new TaiKhoan(maNhanVien,"1"));
//				
//				nv_dao.themNV(nv);
////			dsnv.add(nv);
//			modelNV.addRow(new Object [] {nv.getMaNV(),nv.getTenNV(),nv.getNgaySinh(),nv.getNgayVaolam(),nv.getCMND(),nv.getSDT(),nv.isGioiTinh()? "Nam" : "Nữ",pb.getTenPB()});
//			}
		}
		if(obj.equals(btnNghiviec)) {
			if(jTable1.getSelectedRow() == -1) {
				JOptionPane.showMessageDialog(null,"Vui lòng chọn nhân viên cần cho nghỉ việc");
			}
			else {
			 int result = JOptionPane.showConfirmDialog(this, "Đồng ý cho nhân viên nghỉ việc? ","Xác nhận ",JOptionPane.YES_NO_OPTION);
			 if(result == JOptionPane.YES_OPTION) {
				 NhanVien_DAO dao = new NhanVien_DAO();
				 int row = jTable1.getSelectedRow();
				 String ma = jTable1.getValueAt(row, 0).toString();
				 if(dao.capNhatTrangThai(ma))
				 {
					 modelNV.removeRow(row);
					 JOptionPane.showMessageDialog(this, "Thành Công");     
				 }
			 }
			}
		 }
		if(obj.equals(btnCapnhat)) {
			if(jTable1.getSelectedRow() == -1) {
				JOptionPane.showMessageDialog(null,"Vui lòng chọn nhân viên cần cập nhật");
			}
			int row = jTable1.getSelectedRow();
			String tenNV,phBan;
			
			String maNhanVien = taoMaNhanVien();
			tenNV = txtTen.getText();
			java.sql.Date ns=null;
			java.sql.Date nvl=null;
			int CMND=0,SDT=0;
			if(dateNS.getDate()!=null &&dateNVL.getDate()!=null)
			{
				 ns = new java.sql.Date(dateNS.getDate().getTime());
				 nvl = new java.sql.Date(dateNVL.getDate().getTime());
			}
			
			
				try {
					 CMND = Integer.parseInt(txtCMND.getText());
				} catch (Exception e2) {
					// TODO: handle exception
				}
				try {
					 SDT = Integer.parseInt(txtSDT.getText());
				} catch (Exception e2) {
					// TODO: handle exception
				}
					
			
			
//			
			boolean gt = cbGioitinh.getSelectedIndex() == 0;
			phBan = cbPb.getSelectedItem().toString();
			PhongBan pb;
			PhongBan_DAO pbdao = new PhongBan_DAO();
			pb = pbdao.getPBten(phBan);
			if(txtTen.getText().equals("") | txtSDT.getText().equals("") |  txtCMND.getText().equals("") )
				 JOptionPane.showMessageDialog(this, "Vui lòng nhập dữ liệu");
			else if(ktraten()&&ktrans()&&ktrasdtCN(txtSDT.getText())&&ktracmndCN(txtCMND.getText()))
			{
			int result = JOptionPane.showConfirmDialog(this,"Xác nhận cập nhật ?", "Cập nhật sản phẩm",
			               JOptionPane.YES_NO_OPTION);
			if (result == JOptionPane.YES_OPTION){
			NhanVien_DAO nvdao = new NhanVien_DAO();
			NhanVien nv = new NhanVien(txtMa.getText(), txtTen.getText(),new java.sql.Date(dateNS.getDate().getTime()),new java.sql.Date( dateNVL.getDate().getTime()),txtCMND.getText() ,txtSDT.getText(),cbGioitinh.getSelectedIndex() == 0 );
			nv.setPhongban(pb);
			if(nvdao.SuaNV(nv)) {
//				NhanVien nv1 = new NhanVien();
//				nv1.setCMND(Integer.parseInt(txtCMND.getText()));
//				nv1.setSDT(Integer.parseInt(txtSDT.getText()));
				
				modelNV.setValueAt(txtTen.getText(), row, 1);
				modelNV.setValueAt(new java.sql.Date(dateNS.getDate().getTime()), row, 2);
				modelNV.setValueAt(new java.sql.Date( dateNVL.getDate().getTime()), row, 3);
				modelNV.setValueAt(txtCMND.getText(), row, 4);
				modelNV.setValueAt(txtSDT.getText(), row, 5);
				modelNV.setValueAt(cbGioitinh.getSelectedIndex() == 0 ? "Nam":"Nữ", row, 6);
				modelNV.setValueAt(pb.getTenPB(), row, 7);	
				JOptionPane.showMessageDialog(null,"Cập nhật nhân viên thành công");
			}}
	}}
		if(obj.equals(cbTKPb)) {
			if(cbTKPb.getSelectedIndex() == 0) {
			modelNV.getDataVector().removeAllElements();
			NhanVien_DAO nvdao = new NhanVien_DAO();
			List<NhanVien> ds = nvdao.getLCN();
	        for(int i=0;i<ds.size();i++)
	        {
	        	modelNV.addRow(new Object[] {ds.get(i).getMaNV(),ds.get(i).getTenNV(),ds.get(i).getNgaySinh(),ds.get(i).getNgayVaolam(),ds.get(i).getCMND(),ds.get(i).getSDT(),ds.get(i).isGioiTinh()? "Nam" : "Nữ",ds.get(i).getPhongban().getTenPB()});
	        }
			}
			else {
				modelNV.getDataVector().removeAllElements();
				NhanVien_DAO nvdao = new NhanVien_DAO();
				List<NhanVien> ds = nvdao.getLNV();
		        for(int i=0;i<ds.size();i++)
		        {
		        	modelNV.addRow(new Object[] {ds.get(i).getMaNV(),ds.get(i).getTenNV(),ds.get(i).getNgaySinh(),ds.get(i).getNgayVaolam(),ds.get(i).getCMND(),ds.get(i).getSDT(),ds.get(i).isGioiTinh()? "Nam" : "Nữ",ds.get(i).getPhongban().getTenPB()});
		        }
			}
		}
		if(obj.equals(btnTK)) {
			if(txtTK.getText().equals("")){
				JOptionPane.showMessageDialog(null,"Vui lòng nhập dữ liệu tìm kiếm");
			}
			else {
			String maNV = txtTK.getText();
			modelNV.getDataVector().removeAllElements();
			NhanVien_DAO nvdao = new NhanVien_DAO();
			List<NhanVien> ds = nvdao.getTimNVtheoma(maNV);
	        for(int i=0;i<ds.size();i++)
	        {
	        	modelNV.addRow(new Object[] {ds.get(i).getMaNV(),ds.get(i).getTenNV(),ds.get(i).getNgaySinh(),ds.get(i).getNgayVaolam(),ds.get(i).getCMND(),ds.get(i).getSDT(),ds.get(i).isGioiTinh()? "Nam" : "Nữ",ds.get(i).getPhongban().getTenPB()});
	        }
			}
		}
		if(obj.equals(rTatca)){
			DefaultTableModel newModel;
//			newModel = new DefaultTableModel(new String[] {"Mã nhân viên", "Tên nhân viên","Ngày sinh",
//						"Ngày vào làm", "CMND", "SDT","Giới tính","Phòng ban"}, 0);
//		    jTable1.setModel(newModel);
			modelNV.getDataVector().removeAllElements();
			NhanVien_DAO nvdao = new NhanVien_DAO();
			List<NhanVien> ds = nvdao.getNVall();
	        for(int i=0;i<ds.size();i++)
	        {
	        	modelNV.addRow(new Object[] {ds.get(i).getMaNV(),ds.get(i).getTenNV(),ds.get(i).getNgaySinh(),ds.get(i).getNgayVaolam(),ds.get(i).getCMND(),ds.get(i).getSDT(),ds.get(i).isGioiTinh()? "Nam" : "Nữ",ds.get(i).getPhongban().getTenPB()});
	        }
		}
		if(obj.equals(rDanglam)){
//			DefaultTableModel newModel;
//			newModel = new DefaultTableModel(new String[] {"Mã nhân viên", "Tên nhân viên","Ngày sinh",
//						"Ngày vào làm", "CMND", "SDT","Giới tính","Phòng ban"}, 0);
//		    jTable1.setModel(newModel);
			modelNV.getDataVector().removeAllElements();
			NhanVien_DAO nvdao = new NhanVien_DAO();
			List<NhanVien> ds = nvdao.getNVDangLam();
	        for(int i=0;i<ds.size();i++)
	        {
	        	modelNV.addRow(new Object[] {ds.get(i).getMaNV(),ds.get(i).getTenNV(),ds.get(i).getNgaySinh(),ds.get(i).getNgayVaolam(),ds.get(i).getCMND(),ds.get(i).getSDT(),ds.get(i).isGioiTinh()? "Nam" : "Nữ",ds.get(i).getPhongban().getTenPB()});
	        }
		}
		if(obj.equals(rNghiviec)){
//			DefaultTableModel newModel;
//			newModel = new DefaultTableModel(new String[] {"Mã nhân viên", "Tên nhân viên","Ngày sinh",
//						"Ngày vào làm", "CMND", "SDT","Giới tính","Phòng ban"}, 0);
//		    jTable1.setModel(newModel);
			modelNV.getDataVector().removeAllElements();
			NhanVien_DAO nvdao = new NhanVien_DAO();
			List<NhanVien> ds = nvdao.getNVNghiviec();
	        for(int i=0;i<ds.size();i++)
	        {
	        	modelNV.addRow(new Object[] {ds.get(i).getMaNV(),ds.get(i).getTenNV(),ds.get(i).getNgaySinh(),ds.get(i).getNgayVaolam(),ds.get(i).getCMND(),ds.get(i).getSDT(),ds.get(i).isGioiTinh()? "Nam" : "Nữ",ds.get(i).getPhongban().getTenPB()});
	        }
		}
		if(obj.equals(btnXoaRong)) {
			txtMa.setText("");
			txtTen.setText("");
			dateNS.setDate(null);;
			dateNVL.setDate(null);
			txtSDT.setText("");
			txtCMND.setText("");	
			txtTen.requestFocus();
		}
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		int row = jTable1.getSelectedRow();
		txtMa.setText(jTable1.getValueAt(row, 0).toString());
		txtTen.setText(jTable1.getValueAt(row, 1).toString());
		cbPb.setSelectedItem(pb_dao.getPBten(jTable1.getValueAt(row, 7).toString()).getTenPB());
		cbGioitinh.setSelectedItem(jTable1.getValueAt(row, 6).toString());
		dateNS.setDate((Date) jTable1.getValueAt(row,2));
		dateNVL.setDate((Date) jTable1.getValueAt(row, 3));
		txtSDT.setText(jTable1.getValueAt(row, 5).toString());
		txtCMND.setText(jTable1.getValueAt(row, 4).toString());
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	public String taoMaNhanVien() {
		if(cbPb.getSelectedIndex()==0) {
		String maCuoi = nv_dao.getNVCuoiNV().getMaNV();
		long so = Long.parseLong(maCuoi.substring(2)) + 1000000 + 1;
		String soMoi = ("" + so).substring(1);
		return "NV" + soMoi;
		}
		else {
		String maCuoi = nv_dao.getNVCuoiLD().getMaNV();
		long so = Long.parseLong(maCuoi.substring(2)) + 1000000 + 1;
		String soMoi = ("" + so).substring(1);
		return "LD" + soMoi;
		}
	}
	public boolean ktraten()
	{
	String reg="([AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬBCDĐEÈẺẼÉẸÊỀỂỄẾỆFGHIÌỈĨÍỊJKLMNOÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢPQRSTUÙỦŨÚỤƯỪỬỮỨỰVWXYỲỶỸÝỴZ][aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ]*)(\s[AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬBCDĐEÈẺẼÉẸÊỀỂỄẾỆFGHIÌỈĨÍỊJKLMNOÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢPQRSTUÙỦŨÚỤƯỪỬỮỨỰVWXYỲỶỸÝỴZ][aAàÀảẢãÃáÁạẠăĂằẰẳẲẵẴắẮặẶâÂầẦẩẨẫẪấẤậẬbBcCdDđĐeEèÈẻẺẽẼéÉẹẸêÊềỀểỂễỄếẾệỆfFgGhHiIìÌỉỈĩĨíÍịỊjJkKlLmMnNoOòÒỏỎõÕóÓọỌôÔồỒổỔỗỖốỐộỘơƠờỜởỞỡỠớỚợỢpPqQrRsStTuUùÙủỦũŨúÚụỤưƯừỪửỬữỮứỨựỰvVwWxXyYỳỲỷỶỹỸýÝỵỴzZ]*)*";
	if(!txtTen.getText().matches(reg))
	{
		JOptionPane.showMessageDialog(this,"Tên nhân viên viết hoa mỗi chữ cái đầu");
		return false;
	}return true;
	}
	public boolean ktrasdt(String SDT)
	{	
		
		String reg="[0-9]{9,10}";
		List<NhanVien> dsnv =  nv_dao.getNVall();
		if(SDT ==null)
		{
			return false;
		}
			
		if(!SDT.matches(reg))
		{
			JOptionPane.showMessageDialog(null, "Số điện thoại phải 9 hoặc 10 số");
			return false;
		}
		
		for(int i=0;i<dsnv.size();i++)
		{
			String kt=dsnv.get(i).getSDT();
			if(SDT.equals(kt))
			{
				JOptionPane.showMessageDialog(null,"Trùng số điện thoại");
			return false;
			}
		}
		return true;
	}
	
	public boolean ktrasdtCN(String SDT)
	{	
		
		if(SDT ==null)
		{
			return false;
		}
		
		String reg="[0-9]{9,10}";
		if(!SDT.matches(reg))
		{
			JOptionPane.showMessageDialog(null, "Số điện thoại phải 9 hoặc 10 số");
			return false;
		}
		return true;
	}
	public boolean ktracmnd(String CMND)
	{
		CMND = CMND.trim();
		String reg="[0-9]{9}";
		List<NhanVien> dsnv =  nv_dao.getNVall();
		if(CMND ==null)
		{
			return false;
		}
			
		if(!CMND.matches(reg))
		{
			JOptionPane.showMessageDialog(null, "CMND phải nhập 9 số");
			return false;
		}
		
		for(int i=0;i<dsnv.size();i++)
		{
			String kt=dsnv.get(i).getCMND().trim();
			if(CMND.equals(kt))
			{
				JOptionPane.showMessageDialog(null,"Trùng CMND");
			return false;
			}
		}
		return true;
	}
	public boolean ktracmndCN(String CMND)
	{
	int cmnd = 0;
	String reg="[0-9]{9}";
	if(CMND == null)
	{
		return false;
	}
	try {
		cmnd = Integer.parseInt(CMND);
	} catch (Exception e) {
		// TODO: handle exception
	}
	
	if(!txtCMND.getText().matches(reg))
	{
		JOptionPane.showMessageDialog(null,"CMND nhập 9 số");
		return false;
	}
	return true;
	}
	@SuppressWarnings("deprecation")
	public boolean ktrans()
	{
		if (dateNS.getDate() == null) {
			JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày sinh");
			return false;
		}	
		SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		String s[] = df.format(dateNS.getDate()).split("/");
		LocalDate ns = LocalDate.of(Integer.parseInt(s[2]), Integer.parseInt(s[1]), Integer.parseInt(s[0]));
		
		if(Period.between(ns, LocalDate.now()).getYears()<18) {
			JOptionPane.showMessageDialog(this,"Nhân viên phải trên 18 tuổi");
			dateNS.setDate(null);
			return false;
		}
		return true;
	}
	public boolean ktranvl()
	{
		if (dateNVL.getDate() == null) {
			JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày vào làm");
			return false;
		}	
		SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		String s[] = df.format(dateNVL.getDate()).split("/");
		LocalDate ns = LocalDate.of(Integer.parseInt(s[2]), Integer.parseInt(s[1]), Integer.parseInt(s[0]));
		
		if(Period.between(ns, LocalDate.now()).getYears() > 0 || Period.between(ns, LocalDate.now()).getDays() > 0 || Period.between(ns, LocalDate.now()).getMonths() > 0) {
			dateNVL.setDate(null);
			JOptionPane.showMessageDialog(this,"Ngày vào làm phải lớn hơn ngày hiện tại");
			return false;
		}
		return true;
	}
	public boolean ktraNamNu() {
		SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
		String s[] = df.format(dateNS.getDate()).split("/");
		LocalDate ns = LocalDate.of(Integer.parseInt(s[2]), Integer.parseInt(s[1]), Integer.parseInt(s[0]));
		
		if(cbGioitinh.getSelectedIndex()==0) {
			if(Period.between(ns, LocalDate.now()).getYears()>60) {
				JOptionPane.showMessageDialog(null, "Lao động là nam phải nhỏ hơn 60 tuổi");
				dateNS.setDate(null);
				return false;
			}
		}
		else {
			if(Period.between(ns, LocalDate.now()).getYears()>55) {
				JOptionPane.showMessageDialog(null, "Lao động nữ phải nhỏ hơn 55 tuổi");
				dateNS.setDate(null);
				return false;
			}
		}
		return true;
	}
}
